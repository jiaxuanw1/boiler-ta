# Generated by Django 4.2.20 on 2025-03-18 20:57

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dept', models.CharField(max_length=10)),
                ('number', models.PositiveSmallIntegerField()),
                ('title', models.CharField(max_length=100)),
            ],
            options={
                'unique_together': {('dept', 'number')},
            },
        ),
        migrations.CreateModel(
            name='CourseOffering',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.CharField(max_length=6)),
                ('year', models.PositiveSmallIntegerField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offerings', to='api.course')),
            ],
            options={
                'unique_together': {('course', 'semester', 'year')},
            },
        ),
        migrations.CreateModel(
            name='Homework',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hw_name', models.CharField(max_length=100)),
                ('course_offering', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='homeworks', to='api.courseoffering')),
            ],
        ),
        migrations.CreateModel(
            name='TA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=100, unique=True)),
                ('first', models.CharField(max_length=100)),
                ('last', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_name', models.CharField(max_length=100)),
                ('difficulty', models.PositiveSmallIntegerField()),
                ('required_tas', models.PositiveSmallIntegerField()),
                ('required_gtas', models.PositiveSmallIntegerField(default=0)),
                ('required_utas', models.PositiveSmallIntegerField(default=0)),
                ('hw', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='api.homework')),
            ],
        ),
        migrations.CreateModel(
            name='TACourseRel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classification', models.CharField(max_length=2)),
                ('course_offering', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ta_course_rels', to='api.courseoffering')),
                ('ta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ta_course_rels', to='api.ta')),
            ],
            options={
                'unique_together': {('ta', 'course_offering')},
            },
        ),
        migrations.CreateModel(
            name='GradingRel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grading', to='api.question')),
                ('ta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grading', to='api.ta')),
            ],
            options={
                'unique_together': {('ta', 'question')},
            },
        ),
    ]
